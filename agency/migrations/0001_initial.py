# Generated by Django 5.1.7 on 2025-04-15 13:41

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_type', models.CharField(blank=True, choices=[('odds', 'ODDS'), ('vr', 'VR')], help_text='Applicable only to State/County Entities', max_length=10, null=True)),
                ('state', models.CharField(blank=True, choices=[('OR', 'Oregon')], max_length=2, null=True)),
                ('role', models.CharField(choices=[('provider', 'Provider Agency'), ('coordinator', 'State/County Entity')], max_length=20)),
                ('agency_name', models.CharField(blank=True, help_text='Used by provider agencies to store their official name', max_length=255, null=True)),
                ('contact_first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_last_name', models.CharField(default='', max_length=50)),
                ('contact_phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contact_address', models.CharField(blank=True, max_length=500, null=True)),
                ('job_title', models.CharField(blank=True, max_length=50, null=True)),
                ('referral_status', models.CharField(choices=[('accepting', 'Accepting Referrals'), ('not_accepting', 'Not Accepting Referrals')], default='not_accepting', max_length=20)),
                ('residential_referrals', models.BooleanField(default=False)),
                ('afc_referrals', models.BooleanField(default=False)),
                ('behavior_referrals', models.BooleanField(default=False)),
                ('dsa_facility_referrals', models.BooleanField(default=False)),
                ('dsa_community_referrals', models.BooleanField(default=False)),
                ('dsa_community_solo_referrals', models.BooleanField(default=False)),
                ('vocational_rehabilitation_referrals', models.BooleanField(default=False)),
                ('career_exploration_referrals', models.BooleanField(default=False)),
                ('job_development_referrals', models.BooleanField(default=False)),
                ('job_coaching_referrals', models.BooleanField(default=False)),
                ('job_search_assistance_referrals', models.BooleanField(default=False)),
                ('employment_path_community_referrals', models.BooleanField(default=False)),
                ('employment_path_community_solo_referrals', models.BooleanField(default=False)),
                ('adl_iadl_referrals', models.BooleanField(default=False)),
                ('residential_referrals_count', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('afc_referrals_count', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('behavior_referrals_count', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('dsa_facility_referrals_count', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('dsa_community_referrals_count', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('dsa_community_solo_referrals_count', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('vocational_rehabilitation_referrals_count', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('career_exploration_referrals_count', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('job_development_referrals_count', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('job_coaching_referrals_count', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('job_search_assistance_referrals_count', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('employment_path_community_referrals_count', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('employment_path_community_solo_referrals_count', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('adl_iadl_referrals_count', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99)])),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('notes', models.TextField(blank=True, max_length=500, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('counties', models.ManyToManyField(blank=True, to='agency.county')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='userprofile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('contact_type', models.CharField(blank=True, max_length=50, null=True)),
                ('other_service_desc', models.CharField(blank=True, max_length=100, null=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='agency.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('post_type', models.CharField(choices=[('event', 'Event'), ('placement', 'Job Placement'), ('employer', 'Employer Hiring')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event_date', models.DateField(blank=True, null=True)),
                ('employer_name', models.CharField(blank=True, max_length=255)),
                ('employer_website', models.URLField(blank=True)),
                ('county', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='agency.county')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='agency.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emoji', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='agency.communitypost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('post', 'emoji', 'user')},
            },
        ),
    ]
